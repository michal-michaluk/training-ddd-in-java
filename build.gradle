plugins {
    id("org.springframework.boot") version "3.4.0"
    id("io.spring.dependency-management") version "1.1.6"
    id("com.google.cloud.tools.jib") version '3.4.4'
    id("java")
    id("jacoco")
}

group = "ddd-by-example"
version = "1.0.0"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jib {
    from.image = "eclipse-temurin:21-jre"
    container.jvmFlags = ["--enable-preview"]
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {

    annotationProcessor "org.projectlombok:lombok:1.18.36"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.kafka:spring-kafka"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation "io.micrometer:micrometer-core:1.14.2"
    implementation "io.micrometer:micrometer-registry-prometheus"
    runtimeOnly "org.postgresql:postgresql:42.7.4"
    implementation "org.hibernate:hibernate-validator:8.0.1.Final"
    implementation "io.hypersistence:hypersistence-utils-hibernate-63:3.8.2"
    implementation "com.zaxxer:HikariCP:6.2.1"
    implementation "org.liquibase:liquibase-core:4.30.0"

    //Tests
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "com.vaadin.external.google"
    }
    testImplementation "org.springframework.boot:spring-boot-starter-webflux"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:junit-jupiter:1.20.4"
    testImplementation "org.testcontainers:testcontainers:1.17.4"
    testImplementation "org.testcontainers:kafka:1.17.4"
    testImplementation "org.testcontainers:postgresql:1.17.4"
    testImplementation "com.github.dasniko:testcontainers-keycloak:3.5.1"
    testImplementation "org.awaitility:awaitility:4.2.2"
    testImplementation "au.com.dius.pact.consumer:junit5:4.3.16"
    testImplementation "au.com.dius.pact.provider:junit5spring:4.3.16"
    testImplementation "org.skyscreamer:jsonassert:1.5.3"
    testImplementation "com.tngtech.archunit:archunit-junit5:1.3.0"

}

configurations {
    compileOnly { extendsFrom annotationProcessor }
    testCompileOnly { extendsFrom annotationProcessor }
    testAnnotationProcessor { extendsFrom annotationProcessor }
}

test {
    useJUnitPlatform()
    jvmArgs("--enable-preview")
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
    }
    classDirectories.setFrom(
            files(
                    (classDirectories.files as List).collect {
                        fileTree(dir: it, exclude: [
                                'tools/**',
                                'devices/configuration/AppConfiguration.class',
                                'devices/configuration/AppRunner.class'
                        ])
                    }
            )
    )
}

static defaultSetup(CompileOptions options) {
    options.incremental = true
    options.compilerArgs << "--enable-preview"
    options.compilerArgs << "-parameters"
    options.compilerArgs << "-Xlint:unchecked"
}

compileJava { defaultSetup(options) }
compileTestJava { defaultSetup(options) }
